### This file was generated by Nexus Schema
### Do not make changes to this file directly


type ApplyIseokErrorType implements CreateMutationErrorBase & MutationErrorBase {
  _: String
  endTime: DateTime
  iseokTypeId: String
  location: String
  reason: String
  startTime: DateTime
  studentIdList: [String]
  teacherId: String
}

input ApplyIseokInputType {
  endTime: DateTime
  iseokTypeId: Int!
  location: String
  reason: String
  startTime: DateTime
  studentIdList: [Int]!
  teacherId: Int
}

type ApplyIseokResultType implements CreateMutationResultBase & MutationResultBase {
  _: String
  iseokId: Int!
}

type ApplyIseokType implements CreateMutationBase & MutationBase {
  errors: ApplyIseokErrorType
  id: Int
  result: ApplyIseokResultType
  sucess: Boolean!
}

interface CreateMutationBase implements MutationBase {
  id: Int
  sucess: Boolean!
}

interface CreateMutationErrorBase implements MutationErrorBase {
  _: String
}

interface CreateMutationResultBase implements MutationResultBase {
  _: String
}

"""DateTime custom scalar type"""
scalar DateTime

type IseokType {
  approveSteps: Int
  color: String
  id: Int
  iseokable: Boolean
  locationRequired: Boolean
  maximumDuration: Int
  maximumStudentCount: Int
  minimumDuration: Int
  minimumStudentCount: Int
  name: String
  reasonRequired: Boolean
  shortName: String
  studentRequired: Boolean
  teacherRequired: Boolean
  timeOverlapAllowed: Boolean
  timeSelectOptions: [String]
}

type Mutation {
  applyIseok(data: ApplyIseokInputType): ApplyIseokType
}

interface MutationBase {
  sucess: Boolean!
}

interface MutationErrorBase {
  _: String
}

interface MutationResultBase {
  _: String
}

type Query {
  iseokTypeList: [IseokType]
  studentList: [Student]
  teacherList: [Teacher]
}

type Student {
  fullName: String
  id: Int
  name: String
}

type Teacher {
  id: Int
  name: String
}