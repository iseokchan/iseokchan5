#!/bin/bash

ENV_FILE=./.env
DOCKER_COMPOSE_FILE=./docker/docker-compose.yaml
DOCKER_PROJECT_NAME=iseokchan5

set_dev_secrets() {
    local target=${1:-all}

    case $target in
        all)
            set_dev_secrets db
        ;;
        db)
            export POSTGRES_HOST=127.0.0.1
            export POSTGRES_PORT=5432
            export POSTGRES_DATABASE=iseokchan
            export POSTGRES_USER=ichan_master
            export POSTGRES_PASSWORD=ichan
            export DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
        ;;
        *)
        error "Unknown secret" "$@"
        return 1
        ;;
    esac
}

iseokchan() {
    yarn workspace iseokchan "$@"
}

dev() {
    set_dev_secrets
    check_db

    local target=${1:-all}

    case $target in
        all)
            iseokchan dev
        ;;
        migrate)
            iseokchan prisma migrate dev "${@:2}"
        ;;
        studio)
            iseokchan prisma studio
        ;;
        yarn)
            iseokchan "${@:2}"
        ;;
        *)
        error "Unknown command" "$@"
        return 1
        ;;
    esac
}

test() {
    iseokchan test
}

run() {
    iseokchan run
}

build() {
    iseokchan build
}

check_db() {
    if ! db_isready ; then
        error "Database is not running"
        yarn retry -t 1000 --max-timeout=60000 ./ichan db_isready && check_db
    fi
}

up_db() {
    set_dev_secrets db
    docker-compose --file="$DOCKER_COMPOSE_FILE" -p="$DOCKER_PROJECT_NAME" --profile dev up -d
}

down_db() {
    set_dev_secrets db
    docker-compose --file="$DOCKER_COMPOSE_FILE" -p="$DOCKER_PROJECT_NAME" --profile dev down
}

start_db() {
    set_dev_secrets db
    docker-compose --file="$DOCKER_COMPOSE_FILE" -p="$DOCKER_PROJECT_NAME" --profile dev start -d
}

stop_db() {
    set_dev_secrets db
    docker-compose --file="$DOCKER_COMPOSE_FILE" -p="$DOCKER_PROJECT_NAME" --profile dev stop
}

db_isready() {
    docker exec iseokchan5_db pg_isready
}

migrate() {
    set_dev_secrets
    pipenv run python manage.py migrate "$@"
}

makemigrations() {
    set_dev_secrets
    pipenv run python manage.py makemigrations "$@"
}

showmigrations() {
    set_dev_secrets
    pipenv run python manage.py showmigrations "$@"
}

runserver() {
    set_dev_secrets
    pipenv run python manage.py runserver
}

createsuperuser() {
    set_dev_secrets
    pipenv run python manage.py createsuperuser "$@"
}

collectstatic() {
    set_dev_secrets
    pipenv run python manage.py collectstatic "$@"
}

flush() {
    set_dev_secrets
    pipenv run python manage.py flush "$@"
}

dbshell() {
    set_dev_secrets
    pipenv run python manage.py dbshell "$@"
}

loaddata() {
    set_dev_secrets
    pipenv run python manage.py loaddata "$@"
}

error() {
    echo -e "\033[31mERROR\033[0m" "$@"
}

eslint() {
    yarn eslint --max-warnings=0 "iseokchan/**/*.{js,jsx,ts,tsx}" "$@"
}

stylelint() {
    yarn stylelint "iseokchan/**/*.{js,jsx,ts,tsx}" "$@"
}

fmt() {
    pipenv run black .
    yarn prettier --write "iseokchan/**/*.+(js|jsx|ts|tsx)"
}

if [ "$#" -eq "0" ]; then
    exit 1
fi

eval "$@"